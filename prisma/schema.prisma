// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @db.VarChar(31)
  password  String   @db.VarChar(127)
  salt      String   @db.VarChar(127)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id               Int               @id @default(autoincrement())
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  transactionItems TransactionItem[]
}

model Product {
  id              String            @id @db.VarChar(31)
  name            String            @db.VarChar(63)
  weight          Float
  stocks          Stock[]
  TransactionItem TransactionItem[]
}

model Stock {
  id              String            @id @db.VarChar(31)
  product         Product           @relation(fields: [productId], references: [id])
  productId       String
  cost            Int
  note            String            @db.Text
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  TransactionItem TransactionItem[]
}

model TransactionItem {
  id            Int               @id @default(autoincrement())
  transaction   Transaction       @relation(fields: [transactionId], references: [id])
  transactionId Int
  product       Product           @relation(fields: [productId], references: [id])
  productId     String            @db.VarChar(31)
  stock         Stock             @relation(fields: [stockId], references: [id])
  stockId       String            @db.VarChar(31)
  status        TransactionStatus
  price         Int
}

enum TransactionStatus {
  PURCHASE
  SALE
}
